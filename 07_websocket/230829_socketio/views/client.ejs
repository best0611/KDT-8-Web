<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="/socket.io/socket.io.js"></script>
    <title>Document</title>
  </head>
  <body>
    <div>Socket IO</div>
    <ul></ul>
    <form id="chat">
      <input type="text" id="user" placeholder="사용자명" />
      <input type="text" id="message" placeholder="채팅 내용" /><br />
      <button>채팅</button>
    </form>

    <script>
      const chatForm = document.querySelector("#chat");
      const ul = document.querySelector("ul");
      // io()가 클라이언트 소켓생성 및 연결 설정
      const socket = io();
      // 보내고 받는 이벤트명은 일치해야 함.
      //   socket.emit(
      //     "new_message",
      //     "hello, Server",
      //     true,
      //     10,
      //     "hahaha",
      //     (response) => {
      //       console.log(response);
      //     }
      //   );
      // 여러개를 보낼 수도 있음.
      // 보통은 객체 형태로 하나로 묶어 보낸다.
      socket.emit(
        "new_message",
        { name: "client", message: "서버접속" },
        () => {}
      );

      // 폼이벤트
      chatForm.addEventListener("submit", (event) => {
        event.preventDefault();
        const user = chatForm.querySelector("#user");
        const message = chatForm.querySelector("#message");
        socket.emit(
          "new_message",
          { name: user.value, message: message.value },
          (res) => {
            const li = document.createElement("li");
            li.textContent = `${res.name}: ${res.message}`;
            ul.appendChild(li);
          }
        );
      });
    </script>
  </body>
</html>
